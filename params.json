{"name":"Perfug-deep-into-your-application","tagline":"Start to profile any applications on your linux system that you being either dev or ops","body":"Introduction\r\n=============\r\n\r\nCodes & slides for the presentation done to the 24th performance user group\r\nat Paris the 17/09/2015.\r\n\r\nExample - Calculus on simple matrix\r\n====================================\r\n\r\n\t\tcd src/02-matrix\r\n\t\tmake build\r\n\t\ttime valgrind --tool=callgrind --simulate-cache=yes --dump-instr=yes --collect-jumps=yes ./app 100 100\r\n\r\nLook at symbol table\r\n======================\r\n\r\n\t\tcd src/00-empty\r\n\t\tmake build\r\n\t\treadelf -s ./app;\r\n\t\treadelf -s /lib/x86_64-linux-gnu/libc.so.6 | grep malloc\r\n\r\n\t\t# Strip effect on the symbol table\r\n\t\tstrip ./app\r\n\t\treadelf -s ./app;\r\n\r\nProfiling Callgrind\r\n====================\r\n\r\n\t\tcd src/02-matrix\r\n\t\tmake build\r\n\r\n\t\t# Profiling with callgrind for 100 * 100 matrix\r\n\t\ttime valgrind --tool=callgrind --simulate-cache=yes --dump-instr=yes --collect-jumps=yes ./app 100 100\r\n\r\n\t\t# Perf impact of callgrind\r\n\t\ttime ./app 100 100\r\n\r\nThread dump on Native application - Gstack\r\n===========================================\r\n\r\n\t\tcd ~/sources/memcached\r\n\r\n\t\tsudo -s\r\n\r\nBash function to generate thread dump for native application as you\r\ncan do with jstack\r\n\r\n\t\tgstack() {\r\n\t\t  tmp=$(tempfile)\r\n\t\t  echo thread apply all bt >\"$tmp\"\r\n\t\t  gdb -batch -nx -q -x \"$tmp\" -p \"$1\"\r\n\t\t  rm -f \"$tmp\"\r\n\t\t}\r\n\r\nUse it\r\n\r\n\t\t./memcached &\r\n\r\n\t\twhile sleep 1; do gstack @pid@ ; done\r\n\r\nPerf - Some commands\r\n=====================\r\n\r\nGet a list of avaible counters.\r\n\r\n    perf list\r\n\r\nGet an overview of counters for an application\r\n\r\n    perf stat ./app\r\n\r\n\r\nPerf - Impact on performance\r\n=============================\r\n\r\n\t\ttime ./app 500 500\r\n\t\ttime perf record -g ./app 500 500\r\n\r\nMemcached - Symbol table\r\n=========================\r\n\r\n\t\tcd ~/sources/memcached\r\n\t\treadelf -s ./memcached\r\n\r\nGenerate flamegraph from gdb stack\r\n===================================\r\n\r\n\t\tcd ~/sources/memcached\r\n\t\t./memcached &\r\n\r\n\t\tphp src/03-memcache-php/memcache-set.php\r\n\r\n\t\twhile sleep 0.1; do gstack 8748; done > stack.txt\r\n\t\tcat stack.txt | stackcollapse-gdb.pl | flamegraph.pl > gdb_graph.svg\r\n\r\nMEMCACHE - PROFILING WITH PERF\r\n===============================\r\n\r\n\t\tcd ~/sources/memcached\r\n\r\n\t\tperf record -g ./memcached\r\n\r\n\t\tphp src/03-memcache-php/memcache-set.php\r\n\t\tperf report\r\n\r\n\t\tWarning to /proc/sys/kernel/kptr_restrict\r\n\r\nMEMCACHED - PROFILING CPU CYCLE WITH PERF - WITH KERNEL STACKTRACE\r\n===============================\r\n\r\n\t\t./memcached &\r\n\t\tsudo perf record -a -g -p @pid@\r\n\r\n\t\tphp src/03-memcache-php/memcache-set.php\r\n\t\tperf report\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}